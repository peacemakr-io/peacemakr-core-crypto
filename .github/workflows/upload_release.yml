on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build_ubuntu:
    name: Build Release Asset - Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Install OpenSSL
        run: |
          sudo apt-get install libssl-dev

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p build && pushd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/tmp/peacemakr.io/install
          make check-peacemakr-core-crypto install
          popd
          tar -czf peacemakr-core-crypto-ubuntu-x86_64.tar.gz -C /tmp/peacemakr.io/install/ .

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-artifact@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./peacemakr-core-crypto-ubuntu-x86_64.tar.gz
          name: peacemakr-core-crypto-ubuntu-x86_64.tar.gz

  build_macos:
    name: Build Release Asset - macOS
    runs-on: macos-10.15
    steps:

      - name: Install OpenSSL
        run: |
          brew install openssl@1.1

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p /tmp/peacemakr.io/install
          mkdir -p build && pushd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1 -DPEACEMAKR_BUILD_CPP=ON -DCMAKE_INSTALL_PREFIX=/tmp/peacemakr.io/install
          make check-peacemakr-core-crypto install
          popd
          tar -czf peacemakr-core-crypto-macos-x86_64.tar.gz -C /tmp/peacemakr.io/install/ .

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-artifact@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./peacemakr-core-crypto-macos-x86_64.tar.gz
          name: peacemakr-core-crypto-macos-x86_64.tar.gz

#  TODO: macos runners don't have docker...
#  build_jar:
#    name: Upload Release Asset - JAR
#    runs-on: macos-latest
#    steps:
#      - name: Install OpenSSL
#        run: |
#          brew install openssl@1.1
#
#      - name: Get the version
#        id: get_version
#        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
#
#      - name: Checkout code
#        uses: actions/checkout@v1
#
#      - name: Build project
#        run: |
#          ./bin/release-java.sh . release
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1.0.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ steps.get_version.outputs.VERSION }}
#          release_name: Release ${{ steps.get_version.outputs.VERSION }} JAR
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: https://github.com/peacemakr-io/peacemakr-core-crypto/releases/latest/assets{?name,label}
#          asset_path: ./peacemakr-core-crypto-0.2.2.jar
#          asset_name: peacemakr-core-crypto-0.2.2.jar
#          asset_content_type: application/gzip

  build_python_mac:
    name: Build Release Asset - Python/macOS
    runs-on: macos-latest
    steps:

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
            python-version: '3.x'

      - name: Install OpenSSL
        run: |
          brew install openssl@1.1

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p /tmp/peacemakr.io/install
          pushd bin
          ./release-python.sh local /tmp/peacemakr.io/install release
          popd
          tar -czf peacemakr-core-crypto-python-macos-x86_64.tar.gz -C /tmp/peacemakr.io/install/ .

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-artifact@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./peacemakr-core-crypto-python-macos-x86_64.tar.gz
          name: peacemakr-core-crypto-python-macos-x86_64.tar.gz

  build_python_ubuntu:
    name: Build Release Asset - Python/Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Install OpenSSL
        run: |
          sudo apt-get install libssl-dev

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p /tmp/peacemakr.io/install
          pushd bin
          ./release-python.sh local /tmp/peacemakr.io/install release
          popd
          tar -czf peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz -C /tmp/peacemakr.io/install/ .

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-artifact@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz
          name: peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz

  upload_release:
    name: Create and Upload Release
    needs: [build_ubuntu, build_macos, build_python_ubuntu, build_python_mac]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Download macOS
        uses: actions/download-artifact@v1
        with:
          name: peacemakr-core-crypto-macos-x86_64.tar.gz
          path: /tmp/peacemakr-core-crypto-macos-x86_64.tar.gz

      - name: Download Ubuntu
        uses: actions/download-artifact@v1
        with:
          name: peacemakr-core-crypto-ubuntu-x86_64.tar.gz
          path: /tmp/peacemakr-core-crypto-ubuntu-x86_64.tar.gz

      - name: Download macOS Python
        uses: actions/download-artifact@v1
        with:
          name: peacemakr-core-crypto-python-macos-x86_64.tar.gz
          path: /tmp/peacemakr-core-crypto-python-macos-x86_64.tar.gz

      - name: Download Ubuntu Python
        uses: actions/download-artifact@v1
        with:
          name: peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz
          path: /tmp/peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset - macOS
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/peacemakr-core-crypto-macos-x86_64.tar.gz/peacemakr-core-crypto-macos-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-macos-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset - Ubuntu
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/peacemakr-core-crypto-ubuntu-x86_64.tar.gz/peacemakr-core-crypto-ubuntu-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-ubuntu-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset - macOS Python
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/peacemakr-core-crypto-python-macos-x86_64.tar.gz/peacemakr-core-crypto-python-macos-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-python-macos-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset - Ubuntu Python
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz/peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz
          asset_content_type: application/gzip

  build_docker:
    name: Build and Release Docker containers
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Publish docker images
        run: |
          docker build -t corecrypto-dependencies:latest . -f docker/go-dependencies.Dockerfile --build-arg="CMAKE_BUILD_TYPE=RELEASE"
          docker tag corecrypto-dependencies:latest docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto-dependencies:${{ steps.get_version.outputs.VERSION }}

          docker build -t corecrypto:latest . -f docker/go.Dockerfile
          docker tag corecrypto:latest docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto:${{ steps.get_version.outputs.VERSION }}

          docker login docker.pkg.github.com -u peacemakr-io -p ${{ secrets.GITHUB_TOKEN }}

          docker push docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto-dependencies:${{ steps.get_version.outputs.VERSION }}
          docker push docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto:${{ steps.get_version.outputs.VERSION }}