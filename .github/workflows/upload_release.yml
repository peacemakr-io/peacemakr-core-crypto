on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build_ubuntu:
    name: Upload Release Asset - Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Install OpenSSL
        run: |
          sudo apt-get install libssl-dev

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/tmp/peacemakr.io/install
          make check install
          tar -czf /tmp/peacemakr.io/release_objects/peacemakr-core-crypto-ubuntu-x86_64.tar.gz /tmp/peacemakr.io/install/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} Ubuntu
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./tmp/peacemakr.io/release_objects/peacemakr-core-crypto-ubuntu-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-ubuntu-x86_64.tar.gz
          asset_content_type: application/gzip

  build_macos:
    name: Upload Release Asset - macOS
    runs-on: macos-latest
    steps:
      - name: Install OpenSSL
        run: |
          brew install openssl@1.1

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p /tmp/peacemakr.io/install
          mkdir -p build && pushd build
          cmake .. -DPEACEMAKR_BUILD_CPP=ON -DCMAKE_INSTALL_PREFIX=/tmp/peacemakr.io/install
          make check install
          popd
          tar -czf peacemakr-core-crypto-macos-x86_64.tar.gz /tmp/peacemakr.io/install/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} macOS
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./peacemakr-core-crypto-macos-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-macos-x86_64.tar.gz
          asset_content_type: application/gzip

  build_jar:
    name: Upload Release Asset - JAR
    runs-on: macos-latest
    steps:
      - name: Install OpenSSL
        run: |
          brew install openssl@1.1

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          ./bin/release-java.sh . release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} JAR
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./PeacemakrCoreCrypto-0.0.1.jar
          asset_name: PeacemakrCoreCrypto-0.0.1.jar
          asset_content_type: application/gzip

  build_python_mac:
    name: Upload Release Asset - Python/macOS
    runs-on: macos-latest
    steps:
      - name: Install OpenSSL
        run: |
          brew install openssl@1.1

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p /tmp/peacemakr.io/install
          ./bin/release-python.sh local /tmp/peacemakr.io/install release
          tar -czf peacemakr-core-crypto-python-macos-x86_64.tar.gz /tmp/peacemakr.io/install/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} Python/macOS
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./peacemakr-core-crypto-python-macos-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-python-macos-x86_64.tar.gz
          asset_content_type: application/gzip

  build_python_ubuntu:
    name: Upload Release Asset - Python/Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Install OpenSSL
        run: |
          sudo apt-get install libssl-dev

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build project
        run: |
          mkdir -p /tmp/peacemakr.io/install
          ./bin/release-python.sh local /tmp/peacemakr.io/install release
          tar -czf peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz /tmp/peacemakr.io/install/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} Python/Ubuntu
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz
          asset_name: peacemakr-core-crypto-python-ubuntu-x86_64.tar.gz
          asset_content_type: application/gzip

  build_docker:
    name: Build and Release Docker containers
    runs-on: ubuntu-latest
    steps:
      - name: Publish docker images
        run: |
          docker build -t docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto-dependencies:${{ github.ref }} . -f docker/go-dependencies.Dockerfile --build-arg="CMAKE_BUILD_TYPE=RELEASE"
          docker build -t docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto:${{ github.ref }} . -f docker/go.Dockerfile

          docker login docker.pkg.github.com -u peacemakr-io -p ${{ secrets.GITHUB_TOKEN }}

          docker push docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto-dependencies:${{ github.ref }}
          docker push corecrypto:latest docker.pkg.github.com/peacemakr-io/peacemakr-core-crypto/corecrypto:${{ github.ref }}