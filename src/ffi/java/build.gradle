plugins {
    id 'java'
}

task setupBuildDir(type:Exec) {
    commandLine 'mkdir', '-p', buildDir.path
}

task setupNativeDir(type:Exec) {
    workingDir buildDir.path
    commandLine 'mkdir', '-p', 'native'
    dependsOn += 'setupBuildDir'
}

task cmake(type:Exec) {
    workingDir buildDir.path + "/native"

    if (project.hasProperty("release")) {
        commandLine 'cmake', '../../../../..',
                '-DCMAKE_BUILD_TYPE=Release',
                '-DCMAKE_INSTALL_PREFIX=../../src/main/resources',
                '-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1',
                '-DPEACEMAKR_BUILD_JAVA=ON'
    } else {
        commandLine 'cmake', '../../../../..',
                '-DCMAKE_BUILD_TYPE=Debug',
                // Disable ASAN because otherwise it gets loaded late. You can enable this with some manual work.
                '-DASAN=OFF',
                '-DCMAKE_INSTALL_PREFIX=../../src/main/resources',
                '-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1',
                '-DPEACEMAKR_BUILD_JAVA=ON'
    }

    dependsOn += 'setupNativeDir'
}

task makeInstall(type:Exec) {
    workingDir buildDir.path + "/native"
    commandLine 'make', 'install'

    dependsOn += 'cmake'
}

task makeCheck(type:Exec) {
    workingDir buildDir.path + "/native"
    commandLine 'make', 'check'

    dependsOn += 'cmake'
}

task buildLinux(type:Exec) {
    workingDir buildDir.path + "/../../../.."
    if (project.hasProperty("release")) {
        commandLine "/bin/bash", "-c", "./bin/build-java-linux.sh release"
    } else {
        commandLine "/bin/bash", "-c", "./bin/build-java-linux.sh"
    }

    dependsOn += 'makeInstall'
}

compileJava.dependsOn += 'makeInstall'

test {
    useJUnit()
    failFast = true
    reports.html.enabled = true
    dependsOn += 'makeInstall'
}

task removeInstall(type:Exec) {
    commandLine 'rm', '-rf', 'src/main/resources/include', 'src/main/resources/lib'
}
clean.dependsOn += 'removeInstall'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

jar {
    baseName = "PeacemakrCoreCrypto"
    version = "0.0.1"
    manifest {
        attributes (
            'Name': 'corecrypto',
            'Specification-Title': 'Peacemakr Core Crypto Library',
            'Specification-Version': '1.0',
            'Specification-Vendor': 'Peacemakr Crypto Systems',
            'Implementation-Title': 'io.peacemakr.corecrypto',
            'Implementation-Version': '0',
            'Implementation-Vendor': 'Peacemakr Crypto Systems',
        )
    }

    dependsOn += 'test'
    dependsOn += 'makeCheck'
    dependsOn += 'buildLinux'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile "junit:junit:4.12"
}
